
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    employee(
    # Search By Primary ID
      id: ID @eq
    #   Search by Job Title address
      job_title: String @eq
    ): Employee @find

    allemployees: [Employee!]! @all

    employees(
    #   Filter by name
      full_name: String @where(operator: "like")
    ): [Employee!]! @paginate(defaultCount: 10)

}

type Employee {
    id: ID!
    employee_id: String!
    full_name: String
    gender: GenderEnum
    age: Int!
    hire_date: Date!
    annual_salary: Int!
    bonus: Int!
}

type Mutation {
  createEmployee(input: EmployeeInput! @spread): Employee! @create
  updateEmployee(input: EmployeeUpdateInput! @spread): Employee! @update
  deleteEmployee(input: EmployeeDeleteInput!): Employee! @delete
}

input EmployeeInput {
    employee_id: String!
    full_name: String!
    gender: GenderEnum
    age: Int!
    hire_date: Date!
    annual_salary: Int!
    bonus: Int!
}

input EmployeeUpdateInput {
    id: ID!
    employee_id: String!
    full_name: String!
    gender: GenderEnum
    age: Int!
    hire_date: Date!
    annual_salary: Int!
    bonus: Int!
}


input EmployeeDeleteInput {
    id: ID!
}

enum GenderEnum {
  male
  female
  other
}


